// Generated by Copilot
// Kontroler kalkulatora
import { Request, Response } from 'express';
import { Calculator } from '../calculator';
import { calculatorSchema, singleNumberSchema } from '../validators/calculator.validator';

const calculator = new Calculator();

export const calculatorController = {
    add: (req: Request, res: Response) => {
        try {
            const { a, b } = calculatorSchema.parse(req.body);
            const result = calculator.add(a, b);
            res.json({ result });
        } catch (error) {
            res.status(400).json({ error: 'Invalid input' });
        }
    },

    subtract: (req: Request, res: Response) => {
        try {
            const { a, b } = calculatorSchema.parse(req.body);
            const result = calculator.subtract(a, b);
            res.json({ result });
        } catch (error) {
            res.status(400).json({ error: 'Invalid input' });
        }
    },

    multiply: (req: Request, res: Response) => {
        try {
            const { a, b } = calculatorSchema.parse(req.body);
            const result = calculator.multiply(a, b);
            res.json({ result });
        } catch (error) {
            res.status(400).json({ error: 'Invalid input' });
        }
    },

    divide: (req: Request, res: Response) => {
        try {
            const { a, b } = calculatorSchema.parse(req.body);
            const result = calculator.divide(a, b);
            res.json({ result });
        } catch (error) {
            res.status(400).json({ error: error instanceof Error ? error.message : 'Invalid input' });
        }
    },

    squareRoot: (req: Request, res: Response) => {
        try {
            const { number } = singleNumberSchema.parse(req.body);
            const result = calculator.squareRoot(number);
            res.json({ result });
        } catch (error) {
            res.status(400).json({ error: 'Invalid input' });
        }
    },

    power: (req: Request, res: Response) => {
        try {
            const { a, b } = calculatorSchema.parse(req.body);
            const result = calculator.power(a, b);
            res.json({ result });
        } catch (error) {
            res.status(400).json({ error: 'Invalid input' });
        }
    }
};
